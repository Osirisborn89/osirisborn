name: smoke

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: ["main", "less-**"]

permissions:
  contents: read

concurrency:
  group: smoke-${{ github.event.workflow_run.head_branch }}
  cancel-in-progress: true

jobs:
  smoke:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: windows-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Env info
        shell: pwsh
        run: |
          $PSVersionTable
          Get-Location
          Get-ChildItem -Path . -Recurse -Depth 2 | Select-Object -First 20 FullName

      - name: Start server (inline, capture logs)
        id: start
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          Remove-Item alias:sc -ErrorAction SilentlyContinue

          $repo   = (Resolve-Path ".").Path
          $server = Join-Path $repo "MythicCore\scripts\Osirisborn.Server.ps1"
          if (-not (Test-Path $server)) { throw "Server script not found: $server" }

          $log = Join-Path $repo "server.log"
          $err = Join-Path $repo "server.err.log"

          $p = Start-Process pwsh -WorkingDirectory $repo -NoNewWindow `
                -ArgumentList @('-NoProfile','-ExecutionPolicy','Bypass','-File', $server) `
                -RedirectStandardOutput $log -RedirectStandardError $err -PassThru

          "PID=$($p.Id)" | Out-File -FilePath server.pid -Encoding ascii -Force
          Write-Host "Server PID: $($p.Id)"
          Write-Host "Logs: $log / $err"

      - name: Verify health (127.0.0.1:7780)
        shell: pwsh
        run: |
          $ok = $false
          foreach($i in 1..40){
            try{
              $r = Invoke-WebRequest http://127.0.0.1:7780/ -TimeoutSec 2
              if($r.StatusCode -eq 200){ $ok = $true; break }
            }catch{
              Write-Host ("Attempt {0}: {1}" -f $i, $_.Exception.Message)
            }
            Start-Sleep -Milliseconds 300
          }

          if(-not $ok){
            Write-Host "`n--- server.log (tail) ---"
            if(Test-Path .\server.log){ Get-Content .\server.log -Tail 200 }
            Write-Host "`n--- server.err.log (tail) ---"
            if(Test-Path .\server.err.log){ Get-Content .\server.err.log -Tail 200 }
            Write-Host "`n--- Listeners on 7780 ---"
            try { Get-NetTCPConnection -State Listen | ? LocalPort -eq 7780 | Format-List * } catch {}
            throw "Server did not become healthy on 127.0.0.1:7780"
          }

      - name: Run Smoke.ps1
        shell: pwsh
        run: pwsh -NoProfile -File .\tools\Smoke.ps1 -Port 7780 -AddXP

      - name: Stop server
        if: always()
        shell: pwsh
        run: |
          try {
            if(Test-Path .\server.pid){
              $pid = Get-Content .\server.pid | ForEach-Object { ($_ -split '=')[1] } | ForEach-Object { [int]$_ }
              if($pid){ Stop-Process -Id $pid -Force -ErrorAction SilentlyContinue }
            }
          } catch {}
          exit 0

      - name: Upload server logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: server-logs
          path: |
            server.log
            server.err.log
            server.pid
