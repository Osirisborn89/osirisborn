name: CI

on:
  push:
    branches: ["main", "less-**"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_pwsh:
    name: Pester on pwsh
    runs-on: windows-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Prepare PowerShell (pwsh)
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          Remove-Item alias:sc -ErrorAction SilentlyContinue

      - name: Install Pester 5.5+
        shell: pwsh
        run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          if (-not (Get-Module Pester -ListAvailable | Where-Object { $_.Version -ge [Version]'5.5' })) {
            Install-Module Pester -Scope CurrentUser -Force -SkipPublisherCheck -MinimumVersion 5.5
          }
          Import-Module Pester -MinimumVersion 5.5 -Force

      - name: Run tests (Pester CI)
        shell: pwsh
        run: Invoke-Pester -Path .\tests -CI

  test_powershell:
    name: Pester on powershell
    runs-on: windows-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Prepare PowerShell (WindowsPowerShell)
        shell: powershell
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          Remove-Item alias:sc -ErrorAction SilentlyContinue

      - name: Install Pester 5.5+
        shell: powershell
        run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          if (-not (Get-Module Pester -ListAvailable | Where-Object { $_.Version -ge [Version]'5.5' })) {
            Install-Module Pester -Scope CurrentUser -Force -SkipPublisherCheck -MinimumVersion 5.5
          }
          Import-Module Pester -MinimumVersion 5.5 -Force

      - name: Run tests (Pester CI)
        shell: powershell
        run: Invoke-Pester -Path .\tests -CI
